Class Symbol
------------

The class represents a symbol in the object file. This class holds the
symbol information such as the mangled, pretty and typed names, the
module in which it is present, type, linkage, offset and size.

.. container:: center

   =========== ==========================================
   SymbolType  Meaning
   =========== ==========================================
   ST_UNKNOWN  Unknown type
   ST_FUNCTION Function or other executable code sequence
   ST_OBJECT   Variable or other data object
   ST_MODULE   Source file declaration
   ST_SETION   Region declaration
   ST_TLS      Thread-local storage declaration
   ST_DELETED  Deleted symbol
   ST_NOTYPE   Miscellaneous symbol
   =========== ==========================================

.. container:: center

   ============= =========================================
   SymbolLinkage Meaning
   ============= =========================================
   SL_UNKNOWN    Unknown linkage
   SL_GLOBAL     Process-global symbol
   SL_LOCAL      Process-local (e.g., static) symbol
   SL_WEAK       Alternate name for a function or variable
   ============= =========================================

The following two types are platform-specific:

.. container:: apient

   typedef enum SV_UNKNOWN, SV_DEFAULT, SV_INTERNAL, SV_HIDDEN,
   SV_PROTECTED SymbolVisibility;

.. container:: apient

   typedef enum TAG_UNKNOWN, TAG_USER, TAG_LIBRARY, TAG_INTERNAL
   SymbolTag;

+-----------------+------------------+-------------------------------+
| Method name     | Return type      | Method description            |
+=================+==================+===============================+
| getMangledName  | string           | Raw name of the symbol in the |
|                 |                  | symbol table, including name  |
|                 |                  | mangling.                     |
+-----------------+------------------+-------------------------------+
| getPrettyName   | string           | Demangled name of the symbol  |
|                 |                  | with parameters (for          |
|                 |                  | functions) removed.           |
+-----------------+------------------+-------------------------------+
| getTypedName    | string           | Demangled name of the symbol  |
|                 |                  | including full function       |
|                 |                  | parameters.                   |
+-----------------+------------------+-------------------------------+
| getModule       | Module \*        | The module, if any, that      |
|                 |                  | contains the symbol.          |
+-----------------+------------------+-------------------------------+
| getType         | SymbolType       | The symbol type (as defined   |
|                 |                  | above) of the symbol.         |
+-----------------+------------------+-------------------------------+
| getLinkage      | SymbolLinkage    | The linkage (as defined       |
|                 |                  | above) of the symbol.         |
+-----------------+------------------+-------------------------------+
| getVisibility   | SymbolVisibility | The visibility (as defined    |
|                 |                  | above) of the symbol.         |
+-----------------+------------------+-------------------------------+
| tag             | SymbolTag        | The tag (as defined above) of |
|                 |                  | the symbol.                   |
+-----------------+------------------+-------------------------------+
| getOffset       | Offset           | The offset of the object the  |
|                 |                  | symbols refers to.            |
+-----------------+------------------+-------------------------------+
| getSize         | unsigned         | The size of the object the    |
|                 |                  | symbol refers to.             |
+-----------------+------------------+-------------------------------+
| getRegion       | Region \*        | The region containing the     |
|                 |                  | symbol.                       |
+-----------------+------------------+-------------------------------+
| getIndex        | int              | The index of the symbol       |
|                 |                  | within the symbol table.      |
+-----------------+------------------+-------------------------------+
| getStrIndex     | int              | The index of the symbol name  |
|                 |                  | in the string table.          |
+-----------------+------------------+-------------------------------+
| isInDynSymtab   | bool             | If true, the symbol is        |
|                 |                  | dynamic and can be used as    |
|                 |                  | the target of an intermodule  |
|                 |                  | reference. Implies isInSymtab |
|                 |                  | is false.                     |
+-----------------+------------------+-------------------------------+
| isInSymtab      | bool             | If true, the symbol is        |
|                 |                  | static. Implies isInDynSymtab |
|                 |                  | is false.                     |
+-----------------+------------------+-------------------------------+
| isAbsolute      | bool             | If true, the offset encoded   |
|                 |                  | in the symbol is an absolute  |
|                 |                  | value rather than an offset.  |
+-----------------+------------------+-------------------------------+
| isFunction      | bool             | If true, the symbol refers to |
|                 |                  | a function.                   |
+-----------------+------------------+-------------------------------+
| getFunction     | Function \*      | The Function that contains    |
|                 |                  | this symbol if such a         |
|                 |                  | Function exists.              |
+-----------------+------------------+-------------------------------+
| isVariable      | bool             | If true, the symbol refers to |
|                 |                  | a variable.                   |
+-----------------+------------------+-------------------------------+
| getVariable     | Variable \*      | The Variable that contains    |
|                 |                  | this symbol if such a         |
|                 |                  | Variable exists.              |
+-----------------+------------------+-------------------------------+
| getSymtab       | Symtab \*        | The Symtab that contains this |
|                 |                  | symbol.                       |
+-----------------+------------------+-------------------------------+
| getPtrOffset    | Offset           | For binaries with an OPD      |
|                 |                  | section, the offset in the    |
|                 |                  | OPD that contains the         |
|                 |                  | function pointer data         |
|                 |                  | structure for this symbol.    |
+-----------------+------------------+-------------------------------+
| getLocalTOC     | Offset           | For platforms with a TOC      |
|                 |                  | register, the expected TOC    |
|                 |                  | for the object referred to by |
|                 |                  | this symbol.                  |
+-----------------+------------------+-------------------------------+
| isCommonStorage | bool             | True if the symbol represents |
|                 |                  | a common section (Fortran).   |
+-----------------+------------------+-------------------------------+

.. container:: apient

   SYMTAB_EXPORT Symbol(const std::string& name, SymbolType type,
   SymbolLinkage linkage, SymbolVisibility visibility, Offset offset,
   Module \*module = NULL, Region \*region = NULL, unsigned size = 0,
   bool dyamic = false, bool absolute = false, int index = -1, int
   strindex = -1, bool commonStorage = false)

.. container:: apient

   bool getVersionFileName(std::string &fileName)

.. container:: apient

   bool getVersions(std::vector<std::string> \*&vers)

.. container:: apient

   bool getVersionNum(unsigned &verNum)

Symbol modification
~~~~~~~~~~~~~~~~~~~

Most elements of a can be modified using the functions below. Each
returns on success and otherwise.

.. container:: apient

   bool setSize (unsigned size) bool setOffset (Offset newOffset) bool
   setMangledName (string name) bool setType (SymbolType sType) bool
   setModule (Module \*module) bool setRegion (Region \*region) bool
   setDynamic (bool dyn) bool setAbsolute (bool absolute) bool
   setCommonStorage (bool common) bool setFunction (Function \*func)
   bool setVariable (Variable \*var) bool setIndex (int index) bool
   setStrIndex (int index) bool setPtrOffset (Offset ptr) bool
   setLocalTOC (Offset toc) bool setVersionNum (unsigned num) bool
   setVersionFileName (std::string &fileName) bool setVersions
   (std::vector<std::string> &vers)
