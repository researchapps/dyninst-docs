Class Function
--------------

The Function class represents the portion of the program CFG that is
reachable through intraprocedural control flow transfers from the
function’s entry block. Functions in the ParseAPI have only a single
entry point; multiple-entry functions such as those found in Fortran
programs are represented as several functions that “share” a subset of
the CFG. Functions may be non-contiguous and may share blocks with other
functions.

.. container:: center

   ============ ==========================================
   FuncSource   Meaning
   ============ ==========================================
   RT           recursive traversal (default)
   HINT         specified in CodeSource hints
   GAP          speculative parsing heuristics
   GAPRT        recursive traversal from speculative parse
   ONDEMAND     dynamically discovered at runtime
   MODIFICATION Added via user modification
   ============ ==========================================

.. container:: center

   ================ ===============================
   FuncReturnStatus Meaning
   ================ ===============================
   UNSET            unparsed function (default)
   NORETURN         will not return
   UNKNOWN          cannot be determined statically
   RETURN           may return
   ================ ===============================

.. container:: apient

   typedef boost::transform_iterator<selector, blockmap::iterator>
   bmap_iterator typedef boost::transform_iterator<selector,
   blockmap::const_iterator> bmap_const_iterator typedef
   boost::iterator_range<bmap_iterator> blocklist typedef
   boost::iterator_range<bmap_const_iterator> const_blocklist typedef
   std::set<Edge*> edgelist

+-------------------+----------------------+-----------------------+
| Method name       | Return type          | Method description    |
+===================+======================+=======================+
| name              | string               | Name of the function. |
+-------------------+----------------------+-----------------------+
| addr              | Address              | Entry address of the  |
|                   |                      | function.             |
+-------------------+----------------------+-----------------------+
| entry             | Block \*             | Entry block of the    |
|                   |                      | function.             |
+-------------------+----------------------+-----------------------+
| parsed            | bool                 | Whether the function  |
|                   |                      | has been parsed.      |
+-------------------+----------------------+-----------------------+
| blocks            | blocklist &          | List of blocks        |
|                   |                      | contained by this     |
|                   |                      | function sorted by    |
|                   |                      | entry address.        |
+-------------------+----------------------+-----------------------+
| callEdges         | const edgelist &     | List of outgoing call |
|                   |                      | edges from this       |
|                   |                      | function.             |
+-------------------+----------------------+-----------------------+
| returnBlocks      | const_blocklist &    | List of all blocks    |
|                   |                      | ending in return      |
|                   |                      | edges.                |
+-------------------+----------------------+-----------------------+
| exitBlocks        | const_blocklist &    | List of all blocks    |
|                   |                      | that end the          |
|                   |                      | function, including   |
|                   |                      | blocks with no        |
|                   |                      | out-edges.            |
+-------------------+----------------------+-----------------------+
| hasNoStackFrame   | bool                 | True if the function  |
|                   |                      | does not create a     |
|                   |                      | stack frame.          |
+-------------------+----------------------+-----------------------+
| savesFramePointer | bool                 | True if the function  |
|                   |                      | saves a frame pointer |
|                   |                      | (e.g. %ebp).          |
+-------------------+----------------------+-----------------------+
| cleansOwnStack    | bool                 | True if the function  |
|                   |                      | tears down            |
|                   |                      | stack-passed          |
|                   |                      | arguments upon        |
|                   |                      | return.               |
+-------------------+----------------------+-----------------------+
| region            | CodeRegion \*        | Code region that      |
|                   |                      | contains the          |
|                   |                      | function.             |
+-------------------+----------------------+-----------------------+
| isrc              | InstructionSource \* | The InstructionSource |
|                   |                      | for this function.    |
+-------------------+----------------------+-----------------------+
| obj               | CodeObject \*        | CodeObject that       |
|                   |                      | contains this         |
|                   |                      | function.             |
+-------------------+----------------------+-----------------------+
| src               | FuncSrc              | The type of hint that |
|                   |                      | identified this       |
|                   |                      | function’s entry      |
|                   |                      | point.                |
+-------------------+----------------------+-----------------------+
| restatus          | FuncReturnStatus \*  | Returns the           |
|                   |                      | best-effort           |
|                   |                      | determination of      |
|                   |                      | whether this function |
|                   |                      | may return or not.    |
|                   |                      | Return status cannot  |
|                   |                      | always be statically  |
|                   |                      | determined, and at    |
|                   |                      | most can guarantee    |
|                   |                      | that a function *may* |
|                   |                      | return, not that it   |
|                   |                      | *will* return.        |
+-------------------+----------------------+-----------------------+
| getReturnType     | Type \*              | Type representing the |
|                   |                      | return type of the    |
|                   |                      | function.             |
+-------------------+----------------------+-----------------------+

.. container:: apient

   Function(Address addr, string name, CodeObject \* obj, CodeRegion \*
   region, InstructionSource \* isource)

.. container:: apient

   LoopTreeNode\* getLoopTree()

.. container:: apient

   Loop\* findLoop(const char \*name)

.. container:: apient

   bool getLoops(vector<Loop*> &loops);

.. container:: apient

   bool getOuterLoops(vector<Loop*> &loops);

.. container:: apient

   bool dominates(Block\* A, Block \*B);

.. container:: apient

   Block\* getImmediateDominator(Block \*A);

.. container:: apient

   void getImmediateDominates(Block \*A, set<Block*> &imm);

.. container:: apient

   void getAllDominates(Block \*A, set<Block*> &dom);

.. container:: apient

   bool postDominates(Block\* A, Block \*B);

.. container:: apient

   Block\* getImmediatePostDominator(Block \*A);

.. container:: apient

   void getImmediatePostDominates(Block \*A, set<Block*> &imm);

.. container:: apient

   void getAllPostDominates(Block \*A, set<Block*> &dom);

.. container:: apient

   std::vector<FuncExtent \*> const& extents()

.. container:: apient

   void setEntryBlock(block \* new_entry)

.. container:: apient

   void set_retstatus(FuncReturnStatus rs)

.. container:: apient

   bool contains(Block \*b)

.. container:: apient

   void removeBlock(Block \*)
