.. _`sec:codesource`:

Class CodeSource
----------------

The CodeSource interface is used by the ParseAPI to retrieve binary code
from an executable, library, or other binary code object; it also can
provide hints of function entry points (such as those derived from
debugging symbols) to seed the parser. The ParseAPI provides a default
implementation based on the SymtabAPI that supports many common binary
formats. For details on implementing a custom CodeSource, see Appendix
`[sec:extend] <#sec:extend>`__.

.. container:: apient

   virtual bool nonReturning(Address func_entry) virtual bool
   nonReturning(std::string func_name)

.. container:: apient

   virtual bool nonReturningSyscall(int /*number*/)

.. container:: apient

   virtual Address baseAddress() virtual Address loadAddress()

.. container:: apient

   std::map< Address, std::string > & linkage()

.. container:: apient

   struct Hint Address \_addr; CodeRegion \*_region; std::string \_name;
   Hint(Addr, CodeRegion \*, std::string); std::vector< Hint > const&
   hints()

.. container:: apient

   std::vector<CodeRegion \*> const& regions()

.. container:: apient

   int findRegions(Address addr, set<CodeRegion \*> & ret)

.. container:: apient

   bool regionsOverlap()
