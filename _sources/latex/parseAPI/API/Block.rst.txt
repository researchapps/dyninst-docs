Class Block
-----------

A Block represents a basic block as defined in Section
`[sec:abstractions] <#sec:abstractions>`__, and is the lowest level
representation of code in the CFG.

.. container:: apient

   typedef std::vector<Edge \*> edgelist

+-----------------+------------------+-------------------------------+
| Method name     | Return type      | Method description            |
+=================+==================+===============================+
| start           | Address          | Address of the first          |
|                 |                  | instruction in the block.     |
+-----------------+------------------+-------------------------------+
| end             | Address          | Address immediately following |
|                 |                  | the last instruction in the   |
|                 |                  | block.                        |
+-----------------+------------------+-------------------------------+
| last            | Address          | Address of the last           |
|                 |                  | instruction in the block.     |
+-----------------+------------------+-------------------------------+
| lastInsnAddr    | Address          | Alias of .                    |
+-----------------+------------------+-------------------------------+
| size            | Address          | Size of the block; - .        |
+-----------------+------------------+-------------------------------+
| parsed          | bool             | Whether the block has been    |
|                 |                  | parsed.                       |
+-----------------+------------------+-------------------------------+
| obj             | CodeObject \*    | CodeObject containing this    |
|                 |                  | block.                        |
+-----------------+------------------+-------------------------------+
| region          | CodeRegion \*    | CodeRegion containing this    |
|                 |                  | block.                        |
+-----------------+------------------+-------------------------------+
| sources         | const edgelist & | List of all in-edges to the   |
|                 |                  | block.                        |
+-----------------+------------------+-------------------------------+
| targets         | const edgelist & | List of all out-edges from    |
|                 |                  | the block.                    |
+-----------------+------------------+-------------------------------+
| containingFuncs | int              | Number of Functions that      |
|                 |                  | contain this block.           |
+-----------------+------------------+-------------------------------+

.. container:: apient

   Block(CodeObject \* o, CodeRegion \* r, Address start, Function\* f =
   NULL)

.. container:: apient

   Block(CodeObject \* o, CodeRegion \* r, Address start, Address end,
   Address last, Function\* f = NULL)

.. container:: apient

   bool consistent(Address addr, Address & prev_insn)

.. container:: apient

   void getFuncs(std::vector<Function \*> & funcs)

.. container:: apient

   template <class OutputIterator> void getFuncs(OutputIterator result)

::

          std::set<Function *> funcs;
          block->getFuncs(std::inserter(funcs, funcs.begin()));

.. container:: apient

   typedef std::map<Offset, InstructionAPI::Instruction::Ptr> Insns void
   getInsns(Insns &insns) const

.. container:: apient

   InstructionAPI::Instruction::Ptr getInsn(Offset o) const
